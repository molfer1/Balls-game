!function(t){var e={};function n(s){if(e[s])return e[s].exports;var i=e[s]={i:s,l:!1,exports:{}};return t[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,s){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(s,i,function(e){return t[e]}.bind(null,i));return s},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e),n.d(e,"boardConfig",(function(){return d}));class s{constructor(){}static createBoard(){for(let t=0;t<d.height;t++){c.gameBoard.push([]);for(let e=0;e<d.width;e++){let n=s.initTile(e,t);c.gameBoard[t].push(n),d.board.appendChild(n)}}}static initTile(t,e){let n=document.createElement("div");return n.classList.add("tile","empty"),n.style.left=80*t+"px",n.style.top=80*e+"px",n.id=`id_x${t}_y${e}`,n.addEventListener("click",(function(){c.handleTileClick(n)})),n.addEventListener("mouseover",(function(){c.handlePathPreview(n)})),n}}const i=["blue","red","orange","green","yellow","purple","white"],o=function(){return i[Math.floor(Math.random()*i.length)]};class l{static getBallColor(t){if(!t.classList.contains("filled"))return"empty";{const e=t.children[0];if(e.classList.contains("blue"))return"blue";if(e.classList.contains("red"))return"red";if(e.classList.contains("orange"))return"orange";if(e.classList.contains("green"))return"green";if(e.classList.contains("yellow"))return"yellow";if(e.classList.contains("purple"))return"purple";if(e.classList.contains("white"))return"white"}}static getPositionX(t){return Number(t.id.substring(t.id.lastIndexOf("x")+1,t.id.lastIndexOf("_")))}static getPositionY(t){return Number(t.id.substring(t.id.lastIndexOf("y")+1,t.id.length))}}function r({x:t,y:e}){const n=document.getElementById(`id_x${t}_y${e}`);return!!n&&!n.classList.contains("filled")}var a=function(t,e,n,s){var i,o=arguments.length,l=o<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,n):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(t,e,n,s);else for(var r=t.length-1;r>=0;r--)(i=t[r])&&(l=(o<3?i(l):o>3?i(e,n,l):i(e,n))||l);return o>3&&l&&Object.defineProperty(e,n,l),l};class c{constructor(){c.initGame()}static initGame(){d.board.innerHTML="",s.createBoard(),c.spawnInitialBalls(),c.initNextBalls(),console.log("Game start")}static resetGame(){window.location.reload()}static updateGameAfterMove(){const t=this.checkForBallLines();if(0!=t.length)for(const e of t){const t=document.getElementById(`id_x${e.x}_y${e.y}`);console.log(t),t.classList.contains("filled")&&(this.score=this.score+1),t.classList.remove("filled"),t.classList.add("empty"),t.innerHTML=""}else this.spawnNextBalls(),this.initNextBalls();document.getElementById("score").innerText="Twój wynik to: "+this.score,console.log(this.score)}static spawnInitialBalls(){for(let t=0;t<d.initialBallsCount;t++){const t=c.getEmptyTile();if("classList"in t){const e=document.createElement("div");e.classList.add("ball",o()),t.classList.remove("empty"),t.classList.add("filled"),t.appendChild(e)}}}static initNextBalls(){c.nextColors=[o(),o(),o()];const t=document.getElementById("ballsPreview");t.innerHTML="";for(let e of c.nextColors){let n=document.createElement("div");n.classList.add("ballPreview",e),t.appendChild(n)}}static spawnNextBalls(){for(let t=0;t<d.afterMoveSpawnBallsCount;t++){const e=c.getEmptyTile();if(null==e){this.gameOver();break}if("classList"in e){const n=document.createElement("div");n.classList.add("ball",c.nextColors[t]),e.classList.remove("empty"),e.classList.add("filled"),e.appendChild(n)}}}static getEmptyTile(){const t=document.querySelectorAll("div.empty");return t[Math.floor(Math.random()*t.length)]}static checkForBallLines(){const t=[],e=[];for(const e in this.gameBoard){t.push([]);for(const n in this.gameBoard[e])t[e].push(l.getBallColor(this.gameBoard[e][n]))}for(const n in t){let s=[];for(const i in t)"empty"!=t[n][i]?s.push(t[n][i]):s=[],s.length>=2&&(s[s.length-2]==s[s.length-1]?s.length>=5&&e.push({x:+i,y:+n},{x:Number(i)-1,y:+n},{x:Number(i)-2,y:+n},{x:Number(i)-3,y:+n},{x:Number(i)-4,y:+n}):s=[])}for(const n in t){let s=[];for(const i in t)"empty"!=t[i][n]?s.push(t[i][n]):s=[],s.length>=2&&(s[s.length-2]==s[s.length-1]?s.length>=5&&e.push({x:+n,y:+i},{x:+n,y:Number(i)-1},{x:+n,y:Number(i)-2},{x:+n,y:Number(i)-3},{x:+n,y:Number(i)-4}):s=[])}return e}static getPath(t,e){return function(t,e){const n=[],s=[];class i{constructor(n,s){this.x=n,this.y=s,this.cost=Math.abs(n-t.x)+Math.abs(s-t.y)+Math.abs(n-e.x)+Math.abs(s-e.y)}get parent(){return this._parent}set parent(t){this._parent=t}lessThen(t){return this.cost<t.cost}}for(n.push(new i(t.x,t.y));n.length>0;){n.sort((t,e)=>t.lessThen(e)?-1:1);const t=n.shift();if(s.push(t),t.x===e.x&&t.y===e.y){const e=[];e.push(t);let n=t.parent;for(;n;)e.push(n),n=n.parent;return e}const o=[];o.push(new i(t.x-1,t.y)),o.push(new i(t.x,t.y-1)),o.push(new i(t.x,t.y+1)),o.push(new i(t.x+1,t.y));for(const e of o)r(e)&&(n.find(t=>t.x===e.x&&t.y===e.y)||s.find(t=>t.x===e.x&&t.y===e.y)||(e.parent=t,n.push(e)))}return[]}({x:l.getPositionX(t),y:l.getPositionY(t)},{x:l.getPositionX(e),y:l.getPositionY(e)})}static clearPreviousPath(){const t=document.querySelectorAll("div.path");for(const e of t)e.classList.remove("path")}static handlePathPreview(t){if(!c.lookForPath)return;this.clearPreviousPath();const e=document.querySelector("div.tileStart"),n=this.getPath(e,t);for(const t in n){document.getElementById(`id_x${n[t].x}_y${n[t].y}`).classList.add("path")}}static handleTileClick(t){const e=document.querySelector("div.tileStart");if(t.classList.contains("filled"))null==e?(t.classList.add("tileStart"),c.lookForPath=!0):t.classList.contains("tileStart")?(t.classList.remove("tileStart"),c.lookForPath=!1,t.classList.contains("path")&&t.classList.remove("path")):(e.classList.remove("tileStart"),t.classList.add("tileStart"));else{if(!t.classList.contains("empty"))return;if(null==e)return;{const n=this.getPath(e,t);if(n[0].x!=l.getPositionX(t)||n[0].y!=l.getPositionY(t))return;(class{static moveBall(t,e){c.lookForPath=!1;const n=l.getBallColor(t);t.innerHTML="",t.classList.remove("filled","tileStart"),c.clearPreviousPath(),t.classList.add("empty");const s=document.createElement("ball");s.classList.add("ball",n),e.classList.remove("empty"),e.classList.add("filled"),e.appendChild(s)}}).moveBall(e,t),c.updateGameAfterMove()}}}static gameOver(){document.getElementById("game").classList.add("blur");const t=document.createElement("div"),e=document.createElement("h1"),n=document.createElement("h2"),s=document.createElement("button");t.id="gameOverScreen",e.classList.add("title"),e.innerText="GAME OVER",n.classList.add("finalScore"),n.innerText="Twój wynik to: "+this.score,s.classList.add("resetGameBt"),s.innerText="RESTART",s.addEventListener("click",(function(){c.resetGame()})),t.appendChild(e),t.appendChild(n),t.appendChild(s),document.body.appendChild(t),console.log("GAME OVER")}}c.gameBoard=[],c.nextColors=[],c.lookForPath=!1,c.score=0,a([(t,e,n)=>{const s=n.value;return n.value=function(){const t=performance.now(),e=s.apply(this),n=performance.now();return console.log(`Execution time: ${n-t} milliseconds`),e},n}],c,"initGame",null);const d={board:document.getElementById("board"),score:document.getElementById("score"),height:9,width:9,initialBallsCount:5,afterMoveSpawnBallsCount:3};new c}]);